##========================================================================
## POD DOCUMENTATION, auto-generated by podextract.perl

##========================================================================
## NAME
=pod

=head1 NAME

DiaColloDB::Corpus - diachronic collocation db, source corpous

=cut

##========================================================================
## SYNOPSIS
=pod

=head1 SYNOPSIS

 ##========================================================================
 ## PRELIMINARIES
 
 use DiaColloDB::Corpus;
 
 ##========================================================================
 ## Constructors etc.
 
 $corpus = CLASS_OR_OBJECT->new(%args);
 
 ##========================================================================
 ## API: open/close
 
 $bool = $corpus->open(\@ARGV, %opts);
 $bool = $corpus->close();
 
 ##========================================================================
 ## API: iteration
 
 $nfiles = $corpus->size();
 undef = $corpus->ibegin();
 $bool = $corpus->iok();
 $label = $corpus->ifile();
 $doc_or_undef = $corpus->idocument();
 $pos = $corpus->inext();
 $pos = $corpus->icur();
 

=cut

##========================================================================
## DESCRIPTION
=pod

=head1 DESCRIPTION

=cut

##----------------------------------------------------------------
## DESCRIPTION: DiaColloDB::Corpus: Globals & Constants
=pod

=head2 Globals & Constants

=over 4

=item Variable: @ISA

DiaColloDB::Corpus inherits from L<DiaColloDB::Logger|DiaColloDB::Logger>.

=item Variable: $DCLASS_DEFAULT

Default document subclass;
default = 'DDCTabs'.

=back

=cut

##----------------------------------------------------------------
## DESCRIPTION: DiaColloDB::Corpus: Constructors etc.
=pod

=head2 Constructors etc.

=over 4

=item new

 $corpus = CLASS_OR_OBJECT->new(%args);

%args, object structure:

 files => \@files,   ##-- source files
 dclass => $dclass,  ##-- DiaColloDB::Document subclass for loading (default=$DCLASS_DEFAULT)
 dopts  => \%opts,   ##-- options for $dclass->fromFile()
 cur    => $i,       ##-- index of current file

=back

=cut

##----------------------------------------------------------------
## DESCRIPTION: DiaColloDB::Corpus: API: open/close
=pod

=head2 API: open/close

=over 4

=item open

 $bool = $corpus->open(\@ARGV, %opts);

Open a corpus.
%opts:

 glob => $bool,     ##-- whether to glob arguments
 list => $bool,     ##-- whether arguments are file-lists

=item close

 $bool = $corpus->close();

Close corpus.

=back

=cut

##----------------------------------------------------------------
## DESCRIPTION: DiaColloDB::Corpus: API: iteration
=pod

=head2 API: iteration

=over 4

=item size

 $nfiles = $corpus->size();

Get number of files in corpus.

=item ibegin

 undef = $corpus->ibegin();

reset iterator

=item iok

 $bool = $corpus->iok();

true if iterator is valid

=item ifile

 $label = $corpus->ifile();

current iterator label

=item idocument

 $doc_or_undef = $corpus->idocument();
 $doc_or_undef = $corpus->idocument($pos);

gets current document (1st form), or document at $pos (2nd form).

=item inext

 $pos = $corpus->inext();

increment iterator

=item icur

 $pos = $corpus->icur();

returns current position

=back

=cut

##========================================================================
## END POD DOCUMENTATION, auto-generated by podextract.perl

##======================================================================
## Footer
##======================================================================
=pod

=head1 AUTHOR

Bryan Jurish E<lt>moocow@cpan.orgE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2015-2016 by Bryan Jurish

This package is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.14.2 or,
at your option, any later version of Perl 5 you may have available.

=head1 SEE ALSO

L<DiaColloDB::Document(3pm)|DiaColloDB::Document>,
L<DiaColloDB(3pm)|DiaColloDB>,
L<perl(1)|perl>,
...



=cut
