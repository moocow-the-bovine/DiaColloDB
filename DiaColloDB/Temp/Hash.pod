##========================================================================
## POD DOCUMENTATION, auto-generated by podextract.perl

##========================================================================
## NAME
=pod

=head1 NAME

DiaColloDB::Temp::Hash - DiaColloDB: temporary hashes

=cut

##========================================================================
## SYNOPSIS
=pod

=head1 SYNOPSIS

 ##========================================================================
 ## PRELIMINARIES
 
 use DiaColloDB::Temp::Hash;
 
 ##========================================================================
 ## Overrides
 
 $tied = TIEHASH($classname, $file, %opts);
 undef = utf8_filter_fetch;
 undef = utf8_filter_store;
 undef = $tied->DESTROY();
 
 ##========================================================================
 ## DiaColloDB::Temp API
 
 undef = $obj->cleanup();
 

=cut

##========================================================================
## DESCRIPTION
=pod

=head1 DESCRIPTION

DiaColloDB::Temp::Hash provides a simple L<tie()|perltie> interface
to large temporary hashes stored on disk.

=cut

##----------------------------------------------------------------
## DESCRIPTION: DiaColloDB::Temp::Hash: Globals
=pod

=head2 Globals

=over 4

=item Variable: @ISA

DiaColloDB::Temp::Hash inherits from
L<DB_File|DB_File>
and L<DiaColloDB::Temp|DiaColloDB::Temp>.

=item Variable: %TMPFILES

stores temporary filenames keyed by stringified object; used by cleanup().

=back

=cut

##----------------------------------------------------------------
## DESCRIPTION: DiaColloDB::Temp::Hash: Overrides
=pod

=head2 Overrides

=over 4

=item TIEHASH

 $tied = TIEHASH($classname, $file, %opts);

Create a (temporary) hash using L<DB_File|DB_File>.
%opts, %$tied:

 (
  ##-- DB_File options
  flags => $flags,   ##-- DB_File flags; default=O_RDWR|O_CREAT|O_TRUNC
  mode => $mode,     ##-- DB_File mode; default=(0666 & ~umask)
  type => $type,     ##-- DB_File type; default=$DB_File::DB_BTREE
  utf8keys => $bool, ##-- if true, keys will be stored as utf8 (default=false)
  utf8vals => $bool, ##-- if true, values will be stored as utf8 (default=false)
  utf8 => $bool,     ##-- alias for utf8keys=>$bool, utf8vals=>$bool
  ##
  ##-- local options
  UNLINK => $bool,   ##-- if unspecified or true, file will be unlinked on DESTROY
 )

=item utf8_filter_fetch

 undef = utf8_filter_fetch;

DB_File fetch-filter suitable for use with UTF-8 string values.

=item utf8_filter_store

DB_File store-filter suitable for use with UTF-8 string values.

=item DESTROY

 undef = $tied->DESTROY();

destructor calls cleanup()

=back

=cut

##----------------------------------------------------------------
## DESCRIPTION: DiaColloDB::Temp::Hash: DiaColloDB::Temp API
=pod

=head2 DiaColloDB::Temp API

=over 4

=item cleanup

 undef = $obj->cleanup();

unlink temp files (only if 'temp' attribute is set)

=back

=cut

##========================================================================
## END POD DOCUMENTATION, auto-generated by podextract.perl

##======================================================================
## Footer
##======================================================================
=pod

=head1 AUTHOR

Bryan Jurish E<lt>moocow@cpan.orgE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2015-2016 by Bryan Jurish

This package is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.14.2 or,
at your option, any later version of Perl 5 you may have available.

=head1 SEE ALSO

L<DiaColloDB::Temp::Array(3pm)|DiaColloDB::Temp::Array>,
L<DiaColloDB::Temp::Vec(3pm)|DiaColloDB::Temp::Vec>,
L<DiaColloDB::Temp(3pm)|DiaColloDB::Temp>,
L<DiaColloDB(3pm)|DiaColloDB>,
L<perl(1)|perl>,
...



=cut
